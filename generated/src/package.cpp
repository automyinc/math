
// AUTO GENERATED by vnxcppcodegen

#include <automy/math/Matrix2d.hpp>
#include <automy/math/Matrix3d.hpp>
#include <automy/math/Matrix3f.hpp>
#include <automy/math/Matrix4d.hpp>
#include <automy/math/Matrix4f.hpp>
#include <automy/math/MatrixXd.hpp>
#include <automy/math/MatrixXf.hpp>
#include <automy/math/Vector2d.hpp>
#include <automy/math/Vector2f.hpp>
#include <automy/math/Vector2i.hpp>
#include <automy/math/Vector3d.hpp>
#include <automy/math/Vector3f.hpp>
#include <automy/math/Vector3i.hpp>
#include <automy/math/Vector4d.hpp>
#include <automy/math/Vector4f.hpp>
#include <automy/math/Vector4i.hpp>
#include <automy/math/Vector4uc.hpp>

#include <automy/math/package.hxx>
#include <vnx/vnx.h>



namespace vnx {

void type<::automy::math::Matrix2d>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::automy::math::Matrix2d());
}

void type<::automy::math::Matrix3d>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::automy::math::Matrix3d());
}

void type<::automy::math::Matrix3f>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::automy::math::Matrix3f());
}

void type<::automy::math::Matrix4d>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::automy::math::Matrix4d());
}

void type<::automy::math::Matrix4f>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::automy::math::Matrix4f());
}

void type<::automy::math::MatrixXd>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::automy::math::MatrixXd());
}

void type<::automy::math::MatrixXf>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::automy::math::MatrixXf());
}

void type<::automy::math::Vector2d>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::automy::math::Vector2d());
}

void type<::automy::math::Vector2f>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::automy::math::Vector2f());
}

void type<::automy::math::Vector2i>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::automy::math::Vector2i());
}

void type<::automy::math::Vector3d>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::automy::math::Vector3d());
}

void type<::automy::math::Vector3f>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::automy::math::Vector3f());
}

void type<::automy::math::Vector3i>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::automy::math::Vector3i());
}

void type<::automy::math::Vector4d>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::automy::math::Vector4d());
}

void type<::automy::math::Vector4f>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::automy::math::Vector4f());
}

void type<::automy::math::Vector4i>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::automy::math::Vector4i());
}

void type<::automy::math::Vector4uc>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::automy::math::Vector4uc());
}


} // namespace vnx


namespace automy {
namespace math {


static void register_all_types() {
}

static struct vnx_static_init {
	vnx_static_init() {
		register_all_types();
	}
} vnx_static_init_;


} // namespace automy
} // namespace math
